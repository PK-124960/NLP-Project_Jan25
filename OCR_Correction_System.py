# import streamlit as st
# import json
# import os
# import difflib
# from ocr_processing import extract_text_from_pdf, extract_sections, load_correction_dict, save_correction, suggest_corrections

# # üìå ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ UI ‡∏Ç‡∏≠‡∏á Streamlit
# st.set_page_config(page_title="OCR Correction System", layout="wide")
# st.title("üìÑ OCR Correction System")

# # üìå ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå uploads ‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡∏°‡∏µ
# UPLOAD_DIR = "uploads"
# os.makedirs(UPLOAD_DIR, exist_ok=True)

# # üìå ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå PDF
# uploaded_files = st.file_uploader("üìÇ ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå PDF", type=["pdf"], accept_multiple_files=True)

# if uploaded_files:
#     selected_file = st.selectbox("üìÑ ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç", [file.name for file in uploaded_files])
#     selected_pdf = next(file for file in uploaded_files if file.name == selected_file)
#     pdf_path = os.path.join(UPLOAD_DIR, selected_pdf.name)
    
#     with open(pdf_path, "wb") as f:
#         f.write(selected_pdf.getbuffer())
    
#     # üìå ‡πÉ‡∏ä‡πâ OCR ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏≤‡∏Å PDF ‡πÅ‡∏•‡∏∞‡πÅ‡∏¢‡∏Å‡∏™‡πà‡∏ß‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
#     ocr_text = extract_text_from_pdf(pdf_path)
#     sections = extract_sections(ocr_text)
#     corrections = load_correction_dict()
#     word_corrections = {}

#     st.subheader("üîç ‡∏Ñ‡∏≥‡∏ó‡∏µ‡πà‡∏≠‡∏≤‡∏à‡∏ú‡∏¥‡∏î‡∏à‡∏≤‡∏Å OCR ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÉ‡∏ô‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£")
#     corrected_sections = {}
    
#     for section, text in sections.items():
#         st.markdown(f"### üìù {section}")
        
#         # üìå ‡∏ï‡∏£‡∏ß‡∏à‡∏´‡∏≤‡∏Ñ‡∏≥‡∏ó‡∏µ‡πà‡∏≠‡∏≤‡∏à‡∏ú‡∏¥‡∏î
#         words = text.split()
#         corrected_words = []
        
#         for i, word in enumerate(words):
#             suggested_word = corrections.get(word, word)  # ‡πÉ‡∏ä‡πâ‡∏Ñ‡∏≥‡∏ó‡∏µ‡πà‡πÄ‡∏Ñ‡∏¢‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç ‡∏´‡∏£‡∏∑‡∏≠‡∏Ñ‡πà‡∏≤‡πÄ‡∏î‡∏¥‡∏°
#             corrected_word = st.text_input(
#                 f"‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç `{word}`", 
#                 key=f"edit_{section}_{i}_{word}", 
#                 value=suggested_word
#             )
#             word_corrections[word] = corrected_word
#             corrected_words.append(corrected_word)
        
#         # üìå ‡∏£‡∏ß‡∏°‡∏Ñ‡∏≥‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÅ‡∏•‡πâ‡∏ß‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏Ñ
#         corrected_sections[section] = " ".join(corrected_words)
    
#     # # üìå ‡∏õ‡∏∏‡πà‡∏°‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
#     # if st.button("üíæ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç"):
#     #     save_correction(word_corrections)
#     #     st.session_state["corrected_sections"] = corrected_sections  # ‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÑ‡∏ß‡πâ
#     #     st.success("‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!")
    
#     # # üìå ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
#     # if "corrected_sections" in st.session_state:
#     #     st.subheader("üìú ‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏õ‡∏£‡∏±‡∏ö‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÅ‡∏•‡πâ‡∏ß")
#     #     for section, text in st.session_state["corrected_sections"].items():
#     #         st.markdown(f"### üìù {section}")
#     #         st.markdown(f"{text}")
    
#     # üìå ‡∏õ‡∏∏‡πà‡∏°‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç ‡πÅ‡∏•‡∏∞‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£
#     if st.button("üíæ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÅ‡∏•‡∏∞‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏ó‡∏µ‡πà‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÅ‡∏•‡πâ‡∏ß"):
#         save_correction(word_corrections)
#         st.session_state["corrected_sections"] = corrected_sections  # ‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÑ‡∏ß‡πâ
#         st.success("‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!")
#         st.switch_page("pages/document.py")  # ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£

#  //---------------------------------------------------//

import streamlit as st
import json
import os
import difflib
from ocr_processing import extract_text_from_pdf, extract_sections, load_correction_dict, save_correction, suggest_corrections

# üìå ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ UI ‡∏Ç‡∏≠‡∏á Streamlit ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏ò‡∏µ‡∏°‡∏ô‡πâ‡∏≥‡∏ï‡∏≤‡∏• Minimal
st.set_page_config(page_title="OCR Correction System", layout="wide")
st.markdown("""
    <style>
        body {
            background-color: #FAF3E0;
        }
        .stSidebar {
            background-color: #D4A373;
        }
        .stTextInput > div > div > input {
            border-radius: 8px;
            border: 2px solid #8D6E63;
            padding: 10px;
        }
        .stButton > button {
            background-color: #8D6E63;
            color: white;
            border-radius: 8px;
            padding: 10px;
        }
        .stExpander {
            background-color: #EDE0D4;
            border-radius: 10px;
        }
    </style>
""", unsafe_allow_html=True)

# üìå ‡πÄ‡∏û‡∏¥‡πà‡∏° Sidebar
st.sidebar.title("üìÇ ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£")
st.sidebar.info("‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÅ‡∏•‡∏∞‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏£‡∏≤‡∏ä‡∏Å‡∏≤‡∏£")

# üìå ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå uploads ‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡∏°‡∏µ
UPLOAD_DIR = "uploads"
os.makedirs(UPLOAD_DIR, exist_ok=True)

# üìå ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå PDF
uploaded_files = st.sidebar.file_uploader("üìÇ ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå PDF", type=["pdf"], accept_multiple_files=True)

if uploaded_files:
    selected_file = st.sidebar.selectbox("üìÑ ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç", [file.name for file in uploaded_files])
    selected_pdf = next(file for file in uploaded_files if file.name == selected_file)
    pdf_path = os.path.join(UPLOAD_DIR, selected_pdf.name)
    
    with open(pdf_path, "wb") as f:
        f.write(selected_pdf.getbuffer())
    
    # üìå ‡πÉ‡∏ä‡πâ OCR ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏≤‡∏Å PDF ‡πÅ‡∏•‡∏∞‡πÅ‡∏¢‡∏Å‡∏™‡πà‡∏ß‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
    st.title("üìù ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° OCR")
    st.write("‡∏£‡∏∞‡∏ö‡∏ö‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ñ‡∏≥‡∏ú‡∏¥‡∏î‡∏à‡∏≤‡∏Å OCR")
    
    with st.spinner("üìñ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏• OCR..."):
        ocr_text = extract_text_from_pdf(pdf_path)
        sections = extract_sections(ocr_text)
        corrections = load_correction_dict()
        word_corrections = {}
    
    st.success("‚úÖ OCR ‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!")
    
    # üìå ‡πÉ‡∏ä‡πâ Container ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏à‡∏±‡∏î‡∏£‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ö UI
    corrected_sections = {}
    for section, text in sections.items():
        with st.expander(f"üîç {section}", expanded=True):
            words = text.split()
            corrected_words = []
            
            for i, word in enumerate(words):
                suggested_word = corrections.get(word, word)
                corrected_word = st.text_input(
                    f"‚úèÔ∏è `{word}`", 
                    key=f"edit_{section}_{i}_{word}", 
                    value=suggested_word
                )
                word_corrections[word] = corrected_word
                corrected_words.append(corrected_word)
            
            corrected_sections[section] = " ".join(corrected_words)
    
    # üìå ‡∏õ‡∏∏‡πà‡∏°‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÅ‡∏•‡∏∞‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏´‡∏ô‡πâ‡∏≤
    # st.markdown("""
    #     <div style='text-align: center; margin-top: 20px;'>
    #         <button style='background-color: #8D6E63; color: white; padding: 15px 30px; border-radius: 10px;'>
    #             üíæ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÅ‡∏•‡∏∞‡∏î‡∏π‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£
    #         </button>
    #     </div>
    # """, unsafe_allow_html=True)

    if st.button("üíæ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÅ‡∏•‡∏∞‡∏î‡∏π‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£"):
        save_correction(word_corrections)
        st.session_state["corrected_sections"] = corrected_sections
        st.success("‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£...")
        st.switch_page("pages/Incoming_Document.py")